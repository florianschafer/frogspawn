/*
 * Copyright Florian Schaefer 2019.
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id "io.freefair.lombok" version "5.3.3.3"
}

group 'net.adeptropolis'
version '1.3.2'

sourceCompatibility = 1.8

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    mavenLocal()
}

test {
    minHeapSize = "1G"
    maxHeapSize = "1G"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'frogspawn'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Frogspawn'
                description = 'A Fast Recursive Spectral Graph Partitioner'
                url = 'https://github.com/florianschafer/frogspawn'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'florianschafer'
                        name = 'Florian Schaefer'
                        email = 'florian@adeptropolis.net'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/florianschafer/frogspawn.git'
                    developerConnection = 'scm:git:https://github.com/florianschafer/frogspawn.git'
                    url = 'https://github.com/florianschafer/frogspawn'
                }

            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {
                credentials {
                    username = "${ossrhUsername}"
                    password = "${ossrhPassword}"
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
    useGpgCmd()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

dependencies {
    api group: 'it.unimi.dsi', name: 'fastutil', version: '8.5.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    testImplementation group: 'junit', name: 'junit', version: '4.13'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}
